{"version":3,"sources":["../../app-es6/services/HttpService.js"],"names":["HttpService","res","ok","Error","statusText","url","fetch","then","_handleErrors","json","dado","headers","method","body","JSON","stringify"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;mCAAaA,W;;;;;;;kDAEKC,G,EAAK;AACf,4BAAI,CAACA,IAAIC,EAAT,EAAa,MAAM,IAAIC,KAAJ,CAAUF,IAAIG,UAAd,CAAN;AACb,+BAAOH,GAAP;AACH;;;wCAEGI,G,EAAK;AAAA;;AAEL,+BAAOC,MAAMD,GAAN,EACFE,IADE,CACG;AAAA,mCAAO,MAAKC,aAAL,CAAmBP,GAAnB,CAAP;AAAA,yBADH,EAEFM,IAFE,CAEG;AAAA,mCAAON,IAAIQ,IAAJ,EAAP;AAAA,yBAFH,CAAP;AAGH;;;yCAEIJ,G,EAAKK,I,EAAM;AAAA;;AAEZ,+BAAOJ,MAAMD,GAAN,EAAW;;AAEVM,qCAAS,EAAE,gBAAgB,kBAAlB,EAFC;AAGVC,oCAAQ,MAHE;AAIVC,kCAAMC,KAAKC,SAAL,CAAeL,IAAf;AAJI,yBAAX,EAMFH,IANE,CAMG;AAAA,mCAAO,OAAKC,aAAL,CAAmBP,GAAnB,CAAP;AAAA,yBANH,CAAP;AAQH","file":"HttpService.js","sourcesContent":["export class HttpService {\n\n    _handleErrors(res) {\n        if (!res.ok) throw new Error(res.statusText);\n        return res;\n    }\n\n    get(url) {\n\n        return fetch(url)\n            .then(res => this._handleErrors(res))\n            .then(res => res.json());\n    }\n\n    post(url, dado) {\n\n        return fetch(url, {\n\n                headers: { 'Content-type': 'application/json' },\n                method: 'post',\n                body: JSON.stringify(dado)\n            })\n            .then(res => this._handleErrors(res));\n\n    }\n\n}"]}