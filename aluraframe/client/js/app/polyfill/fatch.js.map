{"version":3,"sources":["../../app-es6/polyfill/fatch.js"],"names":["self","fetch","support","searchParams","iterable","Symbol","blob","Blob","e","formData","arrayBuffer","normalizeName","name","String","test","TypeError","toLowerCase","normalizeValue","value","iteratorFor","items","iterator","next","shift","done","undefined","Headers","headers","map","forEach","append","Object","getOwnPropertyNames","prototype","list","push","get","values","getAll","has","hasOwnProperty","set","callback","thisArg","call","keys","entries","consumed","body","bodyUsed","Promise","reject","fileReaderReady","reader","resolve","onload","result","onerror","error","readBlobAsArrayBuffer","FileReader","readAsArrayBuffer","readBlobAsText","readAsText","Body","_initBody","_bodyInit","_bodyText","isPrototypeOf","_bodyBlob","FormData","_bodyFormData","URLSearchParams","toString","ArrayBuffer","Error","type","rejected","then","text","decode","json","JSON","parse","methods","normalizeMethod","method","upcased","toUpperCase","indexOf","Request","input","options","url","credentials","mode","referrer","clone","form","trim","split","bytes","replace","join","decodeURIComponent","xhr","head","pairs","getAllResponseHeaders","header","key","Response","bodyInit","status","ok","statusText","response","redirectStatuses","redirect","RangeError","location","init","request","XMLHttpRequest","responseURL","getResponseHeader","responseText","ontimeout","open","withCredentials","responseType","setRequestHeader","send","polyfill"],"mappings":"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","file":"fatch.js","sourcesContent":["(function(self) {\n    'use strict';\n\n    if (self.fetch) {\n        return\n    }\n\n    var support = {\n        searchParams: 'URLSearchParams' in self,\n        iterable: 'Symbol' in self && 'iterator' in Symbol,\n        blob: 'FileReader' in self && 'Blob' in self && (function() {\n            try {\n                new Blob()\n                return true\n            } catch (e) {\n                return false\n            }\n        })(),\n        formData: 'FormData' in self,\n        arrayBuffer: 'ArrayBuffer' in self\n    }\n\n    function normalizeName(name) {\n        if (typeof name !== 'string') {\n            name = String(name)\n        }\n        if (/[^a-z0-9\\-#$%&'*+.\\^_`|~]/i.test(name)) {\n            throw new TypeError('Invalid character in header field name')\n        }\n        return name.toLowerCase()\n    }\n\n    function normalizeValue(value) {\n        if (typeof value !== 'string') {\n            value = String(value)\n        }\n        return value\n    }\n\n    // Build a destructive iterator for the value list\n    function iteratorFor(items) {\n        var iterator = {\n            next: function() {\n                var value = items.shift()\n                return { done: value === undefined, value: value }\n            }\n        }\n\n        if (support.iterable) {\n            iterator[Symbol.iterator] = function() {\n                return iterator\n            }\n        }\n\n        return iterator\n    }\n\n    function Headers(headers) {\n        this.map = {}\n\n        if (headers instanceof Headers) {\n            headers.forEach(function(value, name) {\n                this.append(name, value)\n            }, this)\n\n        } else if (headers) {\n            Object.getOwnPropertyNames(headers).forEach(function(name) {\n                this.append(name, headers[name])\n            }, this)\n        }\n    }\n\n    Headers.prototype.append = function(name, value) {\n        name = normalizeName(name)\n        value = normalizeValue(value)\n        var list = this.map[name]\n        if (!list) {\n            list = []\n            this.map[name] = list\n        }\n        list.push(value)\n    }\n\n    Headers.prototype['delete'] = function(name) {\n        delete this.map[normalizeName(name)]\n    }\n\n    Headers.prototype.get = function(name) {\n        var values = this.map[normalizeName(name)]\n        return values ? values[0] : null\n    }\n\n    Headers.prototype.getAll = function(name) {\n        return this.map[normalizeName(name)] || []\n    }\n\n    Headers.prototype.has = function(name) {\n        return this.map.hasOwnProperty(normalizeName(name))\n    }\n\n    Headers.prototype.set = function(name, value) {\n        this.map[normalizeName(name)] = [normalizeValue(value)]\n    }\n\n    Headers.prototype.forEach = function(callback, thisArg) {\n        Object.getOwnPropertyNames(this.map).forEach(function(name) {\n            this.map[name].forEach(function(value) {\n                callback.call(thisArg, value, name, this)\n            }, this)\n        }, this)\n    }\n\n    Headers.prototype.keys = function() {\n        var items = []\n        this.forEach(function(value, name) { items.push(name) })\n        return iteratorFor(items)\n    }\n\n    Headers.prototype.values = function() {\n        var items = []\n        this.forEach(function(value) { items.push(value) })\n        return iteratorFor(items)\n    }\n\n    Headers.prototype.entries = function() {\n        var items = []\n        this.forEach(function(value, name) { items.push([name, value]) })\n        return iteratorFor(items)\n    }\n\n    if (support.iterable) {\n        Headers.prototype[Symbol.iterator] = Headers.prototype.entries\n    }\n\n    function consumed(body) {\n        if (body.bodyUsed) {\n            return Promise.reject(new TypeError('Already read'))\n        }\n        body.bodyUsed = true\n    }\n\n    function fileReaderReady(reader) {\n        return new Promise(function(resolve, reject) {\n            reader.onload = function() {\n                resolve(reader.result)\n            }\n            reader.onerror = function() {\n                reject(reader.error)\n            }\n        })\n    }\n\n    function readBlobAsArrayBuffer(blob) {\n        var reader = new FileReader()\n        reader.readAsArrayBuffer(blob)\n        return fileReaderReady(reader)\n    }\n\n    function readBlobAsText(blob) {\n        var reader = new FileReader()\n        reader.readAsText(blob)\n        return fileReaderReady(reader)\n    }\n\n    function Body() {\n        this.bodyUsed = false\n\n        this._initBody = function(body) {\n            this._bodyInit = body\n            if (typeof body === 'string') {\n                this._bodyText = body\n            } else if (support.blob && Blob.prototype.isPrototypeOf(body)) {\n                this._bodyBlob = body\n            } else if (support.formData && FormData.prototype.isPrototypeOf(body)) {\n                this._bodyFormData = body\n            } else if (support.searchParams && URLSearchParams.prototype.isPrototypeOf(body)) {\n                this._bodyText = body.toString()\n            } else if (!body) {\n                this._bodyText = ''\n            } else if (support.arrayBuffer && ArrayBuffer.prototype.isPrototypeOf(body)) {\n                // Only support ArrayBuffers for POST method.\n                // Receiving ArrayBuffers happens via Blobs, instead.\n            } else {\n                throw new Error('unsupported BodyInit type')\n            }\n\n            if (!this.headers.get('content-type')) {\n                if (typeof body === 'string') {\n                    this.headers.set('content-type', 'text/plain;charset=UTF-8')\n                } else if (this._bodyBlob && this._bodyBlob.type) {\n                    this.headers.set('content-type', this._bodyBlob.type)\n                } else if (support.searchParams && URLSearchParams.prototype.isPrototypeOf(body)) {\n                    this.headers.set('content-type', 'application/x-www-form-urlencoded;charset=UTF-8')\n                }\n            }\n        }\n\n        if (support.blob) {\n            this.blob = function() {\n                var rejected = consumed(this)\n                if (rejected) {\n                    return rejected\n                }\n\n                if (this._bodyBlob) {\n                    return Promise.resolve(this._bodyBlob)\n                } else if (this._bodyFormData) {\n                    throw new Error('could not read FormData body as blob')\n                } else {\n                    return Promise.resolve(new Blob([this._bodyText]))\n                }\n            }\n\n            this.arrayBuffer = function() {\n                return this.blob().then(readBlobAsArrayBuffer)\n            }\n\n            this.text = function() {\n                var rejected = consumed(this)\n                if (rejected) {\n                    return rejected\n                }\n\n                if (this._bodyBlob) {\n                    return readBlobAsText(this._bodyBlob)\n                } else if (this._bodyFormData) {\n                    throw new Error('could not read FormData body as text')\n                } else {\n                    return Promise.resolve(this._bodyText)\n                }\n            }\n        } else {\n            this.text = function() {\n                var rejected = consumed(this)\n                return rejected ? rejected : Promise.resolve(this._bodyText)\n            }\n        }\n\n        if (support.formData) {\n            this.formData = function() {\n                return this.text().then(decode)\n            }\n        }\n\n        this.json = function() {\n            return this.text().then(JSON.parse)\n        }\n\n        return this\n    }\n\n    // HTTP methods whose capitalization should be normalized\n    var methods = ['DELETE', 'GET', 'HEAD', 'OPTIONS', 'POST', 'PUT']\n\n    function normalizeMethod(method) {\n        var upcased = method.toUpperCase()\n        return (methods.indexOf(upcased) > -1) ? upcased : method\n    }\n\n    function Request(input, options) {\n        options = options || {}\n        var body = options.body\n        if (Request.prototype.isPrototypeOf(input)) {\n            if (input.bodyUsed) {\n                throw new TypeError('Already read')\n            }\n            this.url = input.url\n            this.credentials = input.credentials\n            if (!options.headers) {\n                this.headers = new Headers(input.headers)\n            }\n            this.method = input.method\n            this.mode = input.mode\n            if (!body) {\n                body = input._bodyInit\n                input.bodyUsed = true\n            }\n        } else {\n            this.url = input\n        }\n\n        this.credentials = options.credentials || this.credentials || 'omit'\n        if (options.headers || !this.headers) {\n            this.headers = new Headers(options.headers)\n        }\n        this.method = normalizeMethod(options.method || this.method || 'GET')\n        this.mode = options.mode || this.mode || null\n        this.referrer = null\n\n        if ((this.method === 'GET' || this.method === 'HEAD') && body) {\n            throw new TypeError('Body not allowed for GET or HEAD requests')\n        }\n        this._initBody(body)\n    }\n\n    Request.prototype.clone = function() {\n        return new Request(this)\n    }\n\n    function decode(body) {\n        var form = new FormData()\n        body.trim().split('&').forEach(function(bytes) {\n            if (bytes) {\n                var split = bytes.split('=')\n                var name = split.shift().replace(/\\+/g, ' ')\n                var value = split.join('=').replace(/\\+/g, ' ')\n                form.append(decodeURIComponent(name), decodeURIComponent(value))\n            }\n        })\n        return form\n    }\n\n    function headers(xhr) {\n        var head = new Headers()\n        var pairs = (xhr.getAllResponseHeaders() || '').trim().split('\\n')\n        pairs.forEach(function(header) {\n            var split = header.trim().split(':')\n            var key = split.shift().trim()\n            var value = split.join(':').trim()\n            head.append(key, value)\n        })\n        return head\n    }\n\n    Body.call(Request.prototype)\n\n    function Response(bodyInit, options) {\n        if (!options) {\n            options = {}\n        }\n\n        this.type = 'default'\n        this.status = options.status\n        this.ok = this.status >= 200 && this.status < 300\n        this.statusText = options.statusText\n        this.headers = options.headers instanceof Headers ? options.headers : new Headers(options.headers)\n        this.url = options.url || ''\n        this._initBody(bodyInit)\n    }\n\n    Body.call(Response.prototype)\n\n    Response.prototype.clone = function() {\n        return new Response(this._bodyInit, {\n            status: this.status,\n            statusText: this.statusText,\n            headers: new Headers(this.headers),\n            url: this.url\n        })\n    }\n\n    Response.error = function() {\n        var response = new Response(null, { status: 0, statusText: '' })\n        response.type = 'error'\n        return response\n    }\n\n    var redirectStatuses = [301, 302, 303, 307, 308]\n\n    Response.redirect = function(url, status) {\n        if (redirectStatuses.indexOf(status) === -1) {\n            throw new RangeError('Invalid status code')\n        }\n\n        return new Response(null, { status: status, headers: { location: url } })\n    }\n\n    self.Headers = Headers\n    self.Request = Request\n    self.Response = Response\n\n    self.fetch = function(input, init) {\n        return new Promise(function(resolve, reject) {\n            var request\n            if (Request.prototype.isPrototypeOf(input) && !init) {\n                request = input\n            } else {\n                request = new Request(input, init)\n            }\n\n            var xhr = new XMLHttpRequest()\n\n            function responseURL() {\n                if ('responseURL' in xhr) {\n                    return xhr.responseURL\n                }\n\n                // Avoid security warnings on getResponseHeader when not allowed by CORS\n                if (/^X-Request-URL:/m.test(xhr.getAllResponseHeaders())) {\n                    return xhr.getResponseHeader('X-Request-URL')\n                }\n\n                return\n            }\n\n            xhr.onload = function() {\n                var options = {\n                    status: xhr.status,\n                    statusText: xhr.statusText,\n                    headers: headers(xhr),\n                    url: responseURL()\n                }\n                var body = 'response' in xhr ? xhr.response : xhr.responseText\n                resolve(new Response(body, options))\n            }\n\n            xhr.onerror = function() {\n                reject(new TypeError('Network request failed'))\n            }\n\n            xhr.ontimeout = function() {\n                reject(new TypeError('Network request failed'))\n            }\n\n            xhr.open(request.method, request.url, true)\n\n            if (request.credentials === 'include') {\n                xhr.withCredentials = true\n            }\n\n            if ('responseType' in xhr && support.blob) {\n                xhr.responseType = 'blob'\n            }\n\n            request.headers.forEach(function(value, name) {\n                xhr.setRequestHeader(name, value)\n            })\n\n            xhr.send(typeof request._bodyInit === 'undefined' ? null : request._bodyInit)\n        })\n    }\n    self.fetch.polyfill = true\n})(typeof self !== 'undefined' ? self : this);"]}